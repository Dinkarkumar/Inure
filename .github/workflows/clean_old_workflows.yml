name: Cleanup Old Workflows

on:
    schedule:
        -   cron: '0 0 * * *' # Run daily at 00:00
    workflow_dispatch:

jobs:
    cleanup:
        runs-on: ubuntu-latest

        steps:
            -   name: Cleanup old workflow runs
                run: |
                    # Initial URL for fetching workflow runs
                    url="https://api.github.com/repos/${{ github.repository }}/actions/runs"

                    # Get the Unix timestamp of the date 30 days ago
                    old_date=$(date -d '30 days ago' -u +%s)

                    while [[ -n "$url" ]]; do
                        # Fetch workflow runs
                        response=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" $url)

                        # Get all workflow runs
                        all_runs=$(echo "$response" | jq -c '.workflow_runs[] | {id: .id, created_at: .created_at}')

                        # Loop through all workflow runs
                        for run in $(echo "${all_runs}"); do
                            # Get the creation date of the workflow run
                            created_at=$(echo "$run" | jq -r '.created_at')
                            # Convert the creation date to a Unix timestamp
                            created_at_unix=$(date -d"$created_at" +%s)

                            # Compare the creation date with the old date
                            if (( created_at_unix < old_date )); then
                                # Get the id of the workflow run
                                run_id=$(echo "$run" | jq -r '.id')

                                # Delete the workflow run
                                curl -X DELETE -H "Authorization: token ${{ secrets.PAT }}" \
                                    "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"

                                echo "Deleted workflow run $run_id"
                            fi
                        done

                        # Extract the Link header for pagination
                        link_header=$(echo "$response" | grep '^Link:' | sed -e 's/^Link: //')

                        # Extract the URL for the next page
                        url=$(echo "$link_header" | grep -o '<[^>]*>; rel="next"' | sed -e 's/^<//' -e 's/>; rel="next"$//')

                    done
                env:
                    PAT: ${{ secrets.PAT }}
